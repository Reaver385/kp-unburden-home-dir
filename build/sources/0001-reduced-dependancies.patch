diff --git a/bin/unburden-home-dir b/bin/unburden-home-dir
index 82fde63..4e3f40c 100755
--- a/bin/unburden-home-dir
+++ b/bin/unburden-home-dir
@@ -46,14 +46,13 @@ my $BASENAME = 'unburden-home-dir';
 my $LISTSUFFIX = 'list';
 
 # Load Modules
-use Config::File;
 use Getopt::Std; $Getopt::Std::STANDARD_HELP_VERSION = 1;
 use File::Path qw(mkpath rmtree);
 use File::Basename;
 use File::BaseDir qw(config_home);
 use File::Touch;
-use File::Rsync;
 use File::Which;
+use IO::File;
 use IO::Handle;
 use Data::Dumper;
 
@@ -113,6 +112,56 @@ Options without parameters:
     return;
 }
 
+#
+# BEGIN: Non-packaged lighter-weight implementations of read_config_file and rsync
+#
+
+# Read configuration file
+sub read_config_file($) {
+  my $file = shift;
+  my $fh = IO::File->new($file, 'r') or croak("Can't read configuration in $file: $!\n");
+
+  my $config = {};
+  my $line_num = 0;
+
+  while( ++$line_num and my $line = $fh->getline ) {
+    # remove new lines
+    chomp($line);
+
+    # skip comments and blank lines
+    next if( $line =~ m/^\s*#/ );
+    next if( $line =~ m/^\s*$/ );
+
+    unless( $line =~ m/\s*([A-Za-z0-9_\-]+)\s*=\s*(['"]?)(.*?)\2\s*$/ ) {
+      warn "Invalid format at line $line_num, skipping.";
+      next;
+    }
+
+    # assign the key/value
+    $config->{$1} = $3;
+  }
+
+  return $config;
+}
+
+# Perform an verbose archive via rsync
+sub rsync($$) {
+  my ($from, $to) = @_;
+
+  open(PS, "rsync -va \"$from\" \"$to\" 2>&1 |") || return 1;
+
+  while( <PS> ) {
+    chomp;
+    say unless m(^sent |^total size|^\s*$)
+  }
+
+  return $? >> 8;
+}
+
+# END
+#
+
+
 # Parse command line options
 getopts('hnuf:Fb:c:C:l:L:', \%OPTIONS);
 
@@ -155,7 +204,7 @@ foreach my $key (keys %OPTIONS) {
 foreach my $configfile (@CONFFILES) {
     if ( -e $configfile ) {
         # Workaround RT#98542 in Config::File 1.50 and earlier
-        my $cf = Config::File::read_config_file($configfile);
+        my $cf = read_config_file($configfile);
         if (defined($cf)) {
             $CONFIG = { %$CONFIG, %$cf };
         }
@@ -176,22 +225,6 @@ foreach my $key (keys %$CONFIG) {
 my $OLDUMASK = umask();
 umask(077);
 
-# Initialize rsync object
-my $rsync = File::Rsync->new({
-    archive => 1,
-    verbose => 1,
-    outfun => sub {
-        my $output = shift;
-        chomp($output);
-        say $output unless $output =~ m(^sent |^total size|^\s*$);
-    },
-    errfun => sub {
-        # uncoverable subroutine
-        chomp;          # uncoverable statement
-        warn "$_[0]\n"; # uncoverable statement
-    },
-});
-
 # Check for lsof in search path
 my $which_lsof = which('lsof');
 if (!$which_lsof) {
@@ -220,10 +253,7 @@ sub move {
             $from .= '/';
             $to .= '/';
 
-            my $rc = $rsync->exec({
-                src => $from,
-                dst => $to,
-            });
+            my $rc = rsync($from, $to);
             rmtree($from);
         } else {
             my $rc = system(qw(mv -v), $from, $to);
